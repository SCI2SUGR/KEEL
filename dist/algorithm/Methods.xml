<?xml version="1.0" encoding="UTF-8"?>
<method_list>
<method>
    <name>REX1-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>REX1.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
</method>
<method>
    <name>Bojarczuk_GP-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Bojarczuk_GP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>Falco_GP-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Falco_GP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>  
  <method>
    <name>Tan_GP-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Tan_GP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>    
  <method>
    <name>KMeans-CL</name>
    <family>Clustering Algorithms</family>
    <jar_file>ClusterKMeans.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Apriori-A</name>
    <family>Association Rules</family>
    <jar_file>Apriori.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>Eclat-A</name>
    <family>Association Rules</family>
    <jar_file>Eclat.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>FPgrowth-A</name>
    <family>Association Rules</family>
    <jar_file>FPgrowth.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>GAR-A</name>
    <family>Association Rules</family>
    <jar_file>GAR.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

  <method>
    <name>GENAR-A</name>
    <family>Association Rules</family>
    <jar_file>GENAR.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

  <method>
    <name>EARMGA-A</name>
    <family>Association Rules</family>
    <jar_file>EARMGA.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

  <method>
    <name>Alatasetal-A</name>
    <family>Association Rules</family>
    <jar_file>Alatasetal.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

<method>
    <name>ARMMGA-A</name>
    <family>Association Rules</family>
    <jar_file>ARMMGA.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

<method>
    <name>MODENAR-A</name>
    <family>Association Rules</family>
    <jar_file>MODENAR.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

 <method>
    <name>QAR_CIP_NSGAII-A</name>
    <family>Association Rules</family>
    <jar_file>QAR_CIP_NSGAII.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

  <method>
    <name>MOPNAR-A</name>
    <family>Association Rules</family>
    <jar_file>MOPNAR.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

  <method>
    <name>NICGAR-A</name>
    <family>Association Rules</family>
    <jar_file>NICGAR.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>

<method>
      <name>MOEA_Ghosh-A</name>
      <family>Association Rules</family>
      <jar_file>MOEA_Ghosh.jar</jar_file>
      <problem_type>unsupervised</problem_type>
      <input>
        <continuous>Yes</continuous>
        <integer>Yes</integer>
        <nominal>Yes</nominal>
        <missing>No</missing>
        <imprecise>No</imprecise>
        <multiclass>Yes</multiclass>
        <multioutput>No</multioutput>
      </input>
      <output>
        <continuous>Yes</continuous>
        <integer>Yes</integer>
        <nominal>Yes</nominal>
        <missing>No</missing>
        <imprecise>No</imprecise>
        <multiclass>Yes</multiclass>
        <multioutput>No</multioutput>
      </output>
  </method>




  <method>
    <name>FuzzyApriori-A</name>
    <family>Association Rules</family>
    <jar_file>FuzzyApriori.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>GeneticFuzzyApriori-A</name>
    <family>Association Rules</family>
    <jar_file>GeneticFuzzyApriori.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>GeneticFuzzyAprioriDC-A</name>
    <family>Association Rules</family>
    <jar_file>GeneticFuzzyAprioriDC.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>Alcalaetal-A</name>
    <family>Association Rules</family>
    <jar_file>Alcalaetal.jar</jar_file>
    <problem_type>unsupervised</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>   
  <method>
    <name>LDA-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>ClassifierADLinear.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>QDA-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>ClassifierADQuadratic.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Kernel-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>ClassifierKernel.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>LinearLMS-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>ClassifierLinearLMS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
     	<imprecise>No</imprecise>
     	<multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
     	<imprecise>No</imprecise>
     	<multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>PolQuadraticLMS-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>ClassifierPolQuadraticLMS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Logistic-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>Logistic.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>NB-C</name>
    <family>Statistical Classifiers</family>
    <jar_file>Naive_Bayes.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Chi-RW-C</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>Chi_RW.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>WF-C</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>Ishib_Weighted.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>  
  <method>
    <name>FH-GBML-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Ishib_Hybrid.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-Selec-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Ishib_Selec.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
<!--<method>
    <name>SLAVE-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>SLAVE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
    </output>
  </method>
-->

   <method>
    <name>NSLV-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>nslv_k.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </output>
  </method>
  <method>
    <name>SLAVEv0-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>slave_k.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </output>
  </method>
  <method>
    <name>SLAVE2-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>slave2_k.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </output>
  </method>
  <method>
    <name>GFS-GCCL-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Clas-Fuzzy-Ishibuchi99.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-ES-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Clas-Fuzzy-Shi-Eberhart-Chen.jar</jar_file>
    <problem_type>classification</problem_type>
  </method>
  <method>
    <name>GP_COACH-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>GP_COACH-C.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>IVTURS-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>IVTURS-C.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>  
  <method>
    <name>MOGUL-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Clas-Fuzzy-MOGUL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SGERD-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>Clas-Fuzzy-SGERD.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>  
  <method>
    <name>GFS-AdaBoost-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzyAdaBoost.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-LogitBoost-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzyLogitBoost.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GPG-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzyGAP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GP-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzyGP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-MaxLogitBoost-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzyMaxLogitBoost.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-SP-C</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ClassifierFuzzySAP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>FURIA-C</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>FURIA-C.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>  
    <method>
    <name>PDFC-C</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>PDFC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MLP-BP-C</name>
    <family>Neural Networks</family>
    <jar_file>Clas-MLP-BackProp.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MLP-BP-R</name>
    <family>Neural Networks</family>
    <jar_file>Regr-MLP-BackProp.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MLP-CG-C</name>
    <family>Neural Networks</family>
    <jar_file>ClassifierMLPerceptron.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GANN-R</name>
    <family>Evolutionary Neural Networks</family>
    <jar_file>Gann.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SONN-R</name>
    <family>Neural Networks</family>
    <jar_file>Gmdh.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Ensemble-R</name>
    <family>Neural Networks</family>
    <jar_file>Regr-Ensemble.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>RBFN-R</name>
    <family>Neural Networks</family>
    <jar_file>RBFN.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>EvRBFN-C</name>
    <family>Neural Networks</family>
    <jar_file>EvRBF_CL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>RBFN-C</name>
    <family>Neural Networks</family>
    <jar_file>RBFN_CL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Incr-RBFN-R</name>
    <family>Neural Networks</family>
    <jar_file>RBFN_incremental.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Decr-RBFN-R</name>
    <family>Neural Networks</family>
    <jar_file>RBFN_decremental.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Incr-RBFN-C</name>
    <family>Neural Networks</family>
    <jar_file>RBFN_incremental_CL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Decr-RBFN-C</name>
    <family>Neural Networks</family>
    <jar_file>RBFN_decremental_CL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>LVQ-C</name>
    <family>Neural Networks</family>
    <jar_file>LVQ.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>
    <name>C_SVM-C</name>
    <family>Support Vector Machines</family>
    <jar_file>C_SVM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>NU_SVM-C</name>
    <family>Support Vector Machines</family>
    <jar_file>NU_SVM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SMO-C</name>
    <family>Support Vector Machines</family>
    <jar_file>SMO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>NU_SVR-R</name>
    <family>Support Vector Machines</family>
    <jar_file>NU_SVR.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>EPSILON_SVR-R</name>
    <family>Support Vector Machines</family>
    <jar_file>EPSILON_SVR.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MLP-CG-R</name>
    <family>Neural Networks</family>
    <jar_file>ModelMLPerceptron.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>FRSBM-R</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>ModelFSS98.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GPG-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ModelFuzzyGAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-SP-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>ModelFuzzySAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GP-R</name>
    <family>Evolutionary Fuzzy Symbolic Regression</family>
    <jar_file>crispSymRegGAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GSP-R</name>
    <family>Evolutionary Fuzzy Symbolic Regression</family>
    <jar_file>crispSymRegSAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GFS-GAP-Sym-R</name>
    <family>Evolutionary Fuzzy Symbolic Regression</family>
    <jar_file>fuzzySymRegGAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> </output>
  </method>
  <method>
    <name>GFS-SAP-Sym-R</name>
    <family>Evolutionary Fuzzy Symbolic Regression</family>
    <jar_file>fuzzySymRegSAP.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
  	<name>Thrift-R</name>
  	<family>Evolutionary Fuzzy Rule Learning</family>
  	<jar_file>Thrift.jar</jar_file>
  	<problem_type>regression</problem_type>
  	<input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>LinearLMS-R</name>
    <family>Statistical Regression</family>
    <jar_file>ModelLinearLMS.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>PolQuadraticLMS-R</name>
    <family>Statistical Regression</family>
    <jar_file>ModelPolQuadraticLMS.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>C45-C</name>
    <family>Decision Trees</family>
    <jar_file>C45.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>C45_Binarization-C</name>
    <family>Decision Trees</family>
    <jar_file>C45_Binarization-C.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>  
  <method>
    <name>AdaBoost.NC-C</name>
    <family>Decision Trees</family>
    <jar_file>Ensembles-I.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>  
  <method>
    <name>M5-R</name>
    <family>Decision Trees</family>
    <jar_file>M5.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>CART-C</name>
    <family>Decision Trees</family>
    <jar_file>Clas-CART.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>CART-R</name>
    <family>Decision Trees</family>
    <jar_file>Regr-CART.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>
    <name>SLIQ-C</name>
    <family>Decision Trees</family>
    <jar_file>SLIQ.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GAssist-Intervalar-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>GAssist_Intervalar.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GAssist-ADI-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>GAssist_ADI.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>OlexGA-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>OlexGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>No</missing>
	  <imprecise>No</imprecise>
	  <multiclass>No</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>No</integer>
	  <nominal>Yes</nominal>
	  <missing>No</missing>
	  <imprecise>No</imprecise>
	  <multiclass>No</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>XCS-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>XCS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>UCS-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>UCS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
<method>
    <name>GIL-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>GIL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
 <method>
    <name>DMEL-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>DMEL.jar</jar_file>
    <problem_type>classification</problem_type>
	<input>
  	  <continuous>No</continuous>
	  <integer>No</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>No</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>
    <name>OIGA-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>OIGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>ILGA-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>ILGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>CORE-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>CORE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>COGIN-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>COGIN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>OCEC-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>OCEC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>No</continuous>
	  <integer>No</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>DT_GA-C</name>
    <family>Decision Trees</family>
    <jar_file>DT_GA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>No</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>  
<method>
    <name>DT_Oblique-C</name>
    <family>Decision Trees</family>
    <jar_file>DT_oblique.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>No</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>
<method>
    <name>Target-C</name>
    <family>Decision Trees</family>
    <jar_file>Target.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
  	  <continuous>Yes</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>No</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</input>
	<output>
	  <continuous>No</continuous>
	  <integer>Yes</integer>
	  <nominal>Yes</nominal>
	  <missing>Yes</missing>
	  <imprecise>No</imprecise>
	  <multiclass>Yes</multiclass>
	  <multioutput>No</multioutput>
	<multiinstance>No</multiinstance> 
	</output>
  </method>        
  <method>
    <name>LogenPro-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>LogenPro.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>GANN-C</name>
    <family>Evolutionary Neural Networks</family>
    <jar_file>Gann.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SONN-C</name>
    <family>Neural Networks</family>
    <jar_file>Gmdh.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>No</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Ensemble-C</name>
    <family>Neural Networks</family>
    <jar_file>Clas-Ensemble.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>NNEP-C</name>
    <family>Evolutionary Neural Networks</family>
    <jar_file>NNEP_Clas.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>

  <method>
    <name>iRProp+-C</name>
    <family>Neural Networks</family>
    <jar_file>IRPropPlus_Clas.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>NNEP-R</name>
    <family>Evolutionary Neural Networks</family>
    <jar_file>NNEP_Regr.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>Yes</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>Yes</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>iRProp+-R</name>
    <family>Neural Networks</family>
    <jar_file>IRPropPlus_Regr.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>PGIRLA-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Corcoran.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Hider-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Hider.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>AQ-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>AQ.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SIA-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>SIA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>RMini-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>RMini.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>CN2-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>CN2.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>PRISM-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Prism.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>1R-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>1R.jar</jar_file>
    <problem_type>classification</problem_type>
  </method>
  <method>
    <name>EACH-C</name>
    <family>Nested Generalized Learning</family>
    <jar_file>EACH.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
	<method>
    <name>EHS_CHC-C</name>
    <family>Nested Generalized Learning</family>
    <jar_file>EHS_CHC-C.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>  
  <method>
    <name>RISE-C</name>
    <family>Nested Generalized Learning</family>
    <jar_file>RISE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>BNGE-C</name>
    <family>Nested Generalized Learning</family>
    <jar_file>BNGE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>INNER-C</name>
    <family>Nested Generalized Learning</family>
    <jar_file>INNER.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Riona-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Riona.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Ripper-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Ripper.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Slipper-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Slipper.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>C45Rules-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>C45Rules.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>C45RulesSA-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>C45RulesSA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>PART-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>PART.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>LEM1-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>LEM1.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>LEM2-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>LEM2.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Ritio-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Ritio.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Rules6-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Rules6.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SRI-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>SRI.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Swap1-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>Swap1.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>ART-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>ART.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>DataSqueezer-C</name>
    <family>Crisp Rule Learning</family>
    <jar_file>DataSqueezer.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>Ant_Miner-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Ant_Miner.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
    </method>
  <method>
    <name>Advanced_Ant_Miner-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Advanced_Ant_Miner.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
    </method>
  <method>
    <name>Ant_Miner_Plus-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Ant_Miner_Plus.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
    </method>
  <method>
    <name>Advanced_Ant_Miner_Plus-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>Advanced_Ant_Miner_Plus.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
    </method>
  <method>
    <name>PSO_ACO-C</name>
    <family>Evolutionary Crisp Rule Learning</family>
    <jar_file>PSO_ACO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
    </method>
    <method>
    <name>M5Rules-R</name>
    <family>Decision Trees</family>
    <jar_file>M5Rules.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MOGUL-IRL-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>mogulIRL.jar</jar_file>
    <problem_type>regression</problem_type>
  </method>
  <method>
    <name>MOGUL-IRLHC-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>mogulHC.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MOGUL-IRLSC-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>mogulSC.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>SEFC-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>SEFC.jar</jar_file>
    <problem_type>regression</problem_type>
  </method>
  <method>
    <name>P_FCS1-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>P_FCS1.jar</jar_file>
    <problem_type>regression</problem_type>
  </method>
  <method>
    <name>WM-R</name>
    <family>Fuzzy Rule Learning</family>
    <jar_file>Mam-WM.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
     	<nominal>No</nominal>
     	<missing>No</missing>
     	<imprecise>No</imprecise>
     	<multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
     	<integer>Yes</integer>
     	<nominal>No</nominal>
     	<missing>No</missing>
     	<imprecise>No</imprecise>
     	<multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>TSK-IRL-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>TSK_IRL.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>MOGUL-TSK-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>LEL_TSK.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>No</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
   <method>
    <name>GFS-RB-MF-R</name>
    <family>Evolutionary Fuzzy Rule Learning</family>
    <jar_file>GFS_RB_MF.jar</jar_file>
    <problem_type>regression</problem_type>
    <input>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
    	<integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>ID3-C</name>
    <family>Decision Trees</family>
    <jar_file>ID3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance>
	</input>
    <output>
      <continuous>No</continuous>
      <integer>No</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>FuzzyKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FuzzyKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>	
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>IT2FKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>IT2FKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>CFKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>CFKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>PFKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>PFKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>GAFuzzyKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>GAFuzzyKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
   <method>	
    <name>IFV_NP-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>IFV_NP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>VWFuzzyKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>VWFuzzyKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>FuzzyNPC-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FuzzyNPC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>JFKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>JFKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>FCMKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FCMKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>D_SKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>D_SKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
   <method>	
    <name>IFSKNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>IFSKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>IF_KNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>IF_KNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>FENN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FENN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>PosIBL-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>PosIBL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>FRKNNA-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FRKNNA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>	
    <name>FRNN-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FRNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>FRNN_FRS-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FRNN_FRS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>FRNN_VQRS-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>FRNN_VQRS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
		<continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>No</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
		<multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
    <method>  
    <name>EF_KNN_IVFS-C</name>
    <family>Fuzzy Instance Based Learning</family>
    <jar_file>EF_KNN_IVFS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
    <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
      <multiinstance>No</multiinstance> 
    </input>  
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>No</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
  </output>
  </method>
  <method>
    <name>KNN-C</name>
    <family>Lazy Learning</family>
    <jar_file>KNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
	</method>
	<method>	
    <name>NM-C</name>
    <family>Lazy Learning</family>
    <jar_file>NM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>KNNAdaptive-C</name>
    <family>Lazy Learning</family>
    <jar_file>KnnAdaptive.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>CamNN-C</name>
    <family>Lazy Learning</family>
    <jar_file>CamNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>CenterNN-C</name>
    <family>Lazy Learning</family>
    <jar_file>CenterNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>KSNN-C</name>
    <family>Lazy Learning</family>
    <jar_file>KSNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>IDIBL-C</name>
    <family>Lazy Learning</family>
    <jar_file>IDIBL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>KStar-C</name>
    <family>Lazy Learning</family>
    <jar_file>KStar.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>CPW-C</name>
    <family>Lazy Learning</family>
    <jar_file>CPW.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>PW-C</name>
    <family>Lazy Learning</family>
    <jar_file>PW.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>CW-C</name>
    <family>Lazy Learning</family>
    <jar_file>CW.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>
    <name>DE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
<method>
    <name>SADE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SADE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>

<method>
    <name>JADE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-JADE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
  <method>
    <name>OBDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-OBDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
    <method>
    <name>DEGL-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DEGL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
      <method>
    <name>SFLSDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SFLSDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>


<method>
    <name>IPLDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-IPLDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>


   <method>
    <name>SSMASFLSDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SSMASFLSDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>


<method>
    <name>SSMAPSO-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SSMAPSO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
  <method>
    <name>SSMALVQ3-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SSMALVQ3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>


    <method>
    <name>DROP3SFLSDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DROP3SFLSDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>



 <method>
    <name>DROP3PSO-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DROP3PSO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
    <method>
    <name>DROP3LVQ3-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DROP3LVQ3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>

         <method>
    <name>ICFSFLSDE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-ICFSFLSDE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>


    <method>
    <name>ICFPSO-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-ICFPSO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
         <method>
    <name>ICFLVQ3-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-ICFLVQ3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  <method>	
    <name>NSC-C</name>
    <family>Prototype Generation</family>
    <jar_file>NSC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>LBR-C</name>
    <family>Lazy Learning</family>
    <jar_file>LBR.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
	    <integer>No</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  <method>	
    <name>Deeps-C</name>
    <family>Lazy Learning</family>
    <jar_file>Deeps.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
   <method>	
    <name>DeepsNN-C</name>
    <family>Lazy Learning</family>
    <jar_file>DeepsNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
<method>
  <name>CPSO-C</name>
  <family>Evolutionary Crisp Rule Learning</family>
  <jar_file>CPSO.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
<method>
  <name>LDWPSO-C</name>
  <family>Evolutionary Crisp Rule Learning</family>
  <jar_file>LDWPSO.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
<method>
  <name>REPSO-C</name>
  <family>Evolutionary Crisp Rule Learning</family>
  <jar_file>REPSO.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
  <method>
  <name>PSOLDA-C</name>
  <family>Statistical Classifiers</family>
  <jar_file>PSOLDA.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
<method>
  <name>BioHEL-C</name>
  <family>Evolutionary Crisp Rule Learning</family>
  <jar_file>BioHEL.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
  <method>
  <name>MPLCS-C</name>
  <family>Evolutionary Crisp Rule Learning</family>
  <jar_file>MPLCS.jar</jar_file>
  <problem_type>classification</problem_type>
  <input>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </input>
  <output>
    <continuous>Yes</continuous>
    <integer>Yes</integer>
    <nominal>Yes</nominal>
    <missing>Yes</missing>
    <imprecise>No</imprecise>
    <multiclass>Yes</multiclass>
    <multioutput>No</multioutput>
  <multiinstance>No</multiinstance> 
  </output>
</method>
  <method>
    <name>PUBLIC-C</name>
    <family>Decision Trees</family>
    <jar_file>PUBLIC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>Yes</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>
  
  <method>	
    <name>FunctionalTrees-C</name>
    <family>Decision Trees</family>
    <jar_file>FunctionalTrees.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method> 
  <method>	
    <name>LazyDT-C</name>
    <family>Lazy Learning</family>
    <jar_file>LazyDT.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>No</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method> 
    <method>
    <name>Fuzzy-FARCHD-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-Fuzzy-FARCHD.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method> 
	<method>	
    <name>CBA-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-CBA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
	    <integer>No</integer>
	    <nominal>Yes</nominal>
	    <missing>no</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>   
  <method>	
    <name>CBA2-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-CBA2.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
	    <integer>No</integer>
	    <nominal>Yes</nominal>
	    <missing>no</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method> 
  <method>	
    <name>CPAR-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-CPAR.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>No</continuous>
	    <integer>No</integer>
	    <nominal>Yes</nominal>
	    <missing>no</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</output>
  </method>   
  <method>
	  <name>CMAR-C</name>
	  <family>Associative Classification</family>
	  <jar_file>Clas-CMAR.jar</jar_file>
	  <problem_type>classification</problem_type>
	  <input>
		<continuous>No</continuous>
		<integer>No</integer>
		<nominal>Yes</nominal>
		<missing>No</missing>
		<imprecise>No</imprecise>
		<multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
		<continuous>No</continuous>
		<integer>No</integer>
		<nominal>Yes</nominal>
		<missing>No</missing>
		<imprecise>No</imprecise>
		<multiclass>Yes</multiclass>
		<multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
 </method> 
   <method>
    <name>FCRA-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-Fuzzy-FCRA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method> 
  <method>
    <name>CFAR-C</name>
    <family>Associative Classification</family>
    <jar_file>Clas-Fuzzy-CFAR.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>
    <name>Depur-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-Depur.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  <method>
    <name>PSO-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-PSO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>

     <method>
    <name>RSP-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-RSP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
    <method>
    <name>AMPSO-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-AMPSO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
      <method>
    <name>PSCSA-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-PSCSA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
      <method>
    <name>POC-NN-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-POC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  
      <method>
    <name>MSE-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-MSE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
  <method>
    <name>ICPL-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-ICPL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
    <method>
    <name>SGP-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-SGP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
    <method>
    <name>ENPC-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-ENPC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>
      <method>
    <name>MixtGauss-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-MixtGauss.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  </output>
  </method>

<method>
    <name>LVQTC-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQTC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>LVQPRU-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQPRU.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>HYB-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-HYB.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>BTS3-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-BTS3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>GENN-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-GENN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>Chen-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-Chen.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>

<method>
    <name>MCA-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-MCA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>GMCA-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-GMCA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>DSM-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-DSM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>VQ-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-VQ.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>AVQ-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-AVQ.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
 </method>
 
<method>
    <name>LVQ1-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQ1.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>LVQ2-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQ2.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>LVQ2_1-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQ2_1.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>LVQ3-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-LVQ3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>PNN-C</name>
    <family>Prototype Generation</family>
    <jar_file>IG-PNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
		</output>
  </method>
  <method>
    <name>CNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-CNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
    	<imprecise>No</imprecise>
    	<multiclass>Yes</multiclass>
    	<multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>ENN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ENN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>

<method>
    <name>RNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-RNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>SNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-SNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output><continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>TCNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-TCNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
    	<imprecise>No</imprecise>
    	<multiclass>Yes</multiclass>
    	<multioutput>No</multioutput>
    <multiinstance>No</multiinstance> 
	</input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>AllKNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-AllKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass> 
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>Multiedit-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-Multiedit.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
   	  <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>MNV-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-MNV.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
   	  <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>Shrink-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-Shrink.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>IB3-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-IB3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>RMHC-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-RMHC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>MCS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-MCS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>ModelCS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ModelCS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
    	<imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
    	<integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>VSM-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-VSM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>Explore-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-Explore.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>GG-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-GG.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>RNG-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-RNG.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>GGA-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-GGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>SGA-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-SGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>MENN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-MENN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>DROP3-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-DROP3.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	   <integer>Yes</integer>
	   <nominal>Yes</nominal>
	   <missing>Yes</missing>
	   <imprecise>No</imprecise>
	   <multiclass>Yes</multiclass>
	   <multioutput>No</multioutput>
	 <multiinstance>No</multiinstance> 
	 </output>
	</method>
  <method>
    <name>MCNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-MCNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	   <integer>Yes</integer>
	   <nominal>Yes</nominal>
	   <missing>Yes</missing>
	   <imprecise>No</imprecise>
	   <multiclass>Yes</multiclass>
	   <multioutput>No</multioutput>
	 <multiinstance>No</multiinstance> 
	 </output>
	</method>
  <method>
    <name>ICF-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ICF.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>IKNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-IKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>IGA-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-IGA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>PSRCG-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-PSRCG.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>ZhangTS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ZhangTS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>NCNEdit-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-NCNEdit.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>CPruner-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-CPruner.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>CHC-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-CHC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>PBIL-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-PBIL.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>POP-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-POP.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>Reconsistent-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-Reconsistent.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>ENRBF-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ENRBF.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>MSS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-MSS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>ENNTh-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-ENNTh.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>BSE-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-BSE.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>SVBPS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-SVBPS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>GCNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-GCNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>FCNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-FCNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>GA_MSE_CC_FSM-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-GA_MSE_CC_FSM.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>SSMA-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-SSMA.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>HMNEI-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-HMNEI.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
    	<nominal>Yes</nominal>
    	<missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
  </method>
  <method>
    <name>NRMCS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-NRMCS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>TRKNN-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-TRKNN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>No</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
  <method>
    <name>PSC-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-PSC.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>
	<method>
    <name>CCIS-C</name>
    <family>Prototype Selection</family>
    <jar_file>IS-CCIS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>	
  <method>
    <name>CoCoIS-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IS-CoCoIS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </input>
	  <output>
	    <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
	    <multioutput>No</multioutput>
	  <multiinstance>No</multiinstance> 
	  </output>
	</method>   
	<method>	
    <name>EFS_RPS-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>EFS_RPS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
	</method>
  <method>	
    <name>EIS_RFS-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>EIS_RFS.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method> 
  <method>	
    <name>CIW_NN-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>CIW_NN.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
  <method>	
    <name>IFS_COCO-C</name>
    <family>Evolutionary Prototype Selection</family>
    <jar_file>IFS_COCO.jar</jar_file>
    <problem_type>classification</problem_type>
    <input>
      <continuous>Yes</continuous>
	    <integer>Yes</integer>
	    <nominal>Yes</nominal>
	    <missing>Yes</missing>
	    <imprecise>No</imprecise>
	    <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </input>
    <output>
      <continuous>Yes</continuous>
      <integer>Yes</integer>
      <nominal>Yes</nominal>
      <missing>No</missing>
      <imprecise>No</imprecise>
      <multiclass>Yes</multiclass>
      <multioutput>No</multioutput>
    </output>
  </method>
</method_list>

